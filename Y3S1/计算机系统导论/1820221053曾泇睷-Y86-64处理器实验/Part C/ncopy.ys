# name : Chang Jia Jian
# ID : 1820221053
# date : 2024.12.06
#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	iaddq $-8, %rdx 		# 如果一开始输入的len就<=0，直接结束
	jl Test

Loop8x8:
	#取地址
	mrmovq 0(%rdi), %r8
	mrmovq 8(%rdi), %r9
	mrmovq 16(%rdi), %r10
	mrmovq 24(%rdi), %r11
	mrmovq 32(%rdi), %r12
	mrmovq 40(%rdi), %r13
	mrmovq 48(%rdi), %r14
	mrmovq 56(%rdi), %rbx

	#赋值
	rmmovq %r8, 0(%rsi)
	rmmovq %r9, 8(%rsi)
	rmmovq %r10, 16(%rsi)
	rmmovq %r11, 24(%rsi)
	rmmovq %r12, 32(%rsi)
	rmmovq %r13, 40(%rsi)
	rmmovq %r14, 48(%rsi)
	rmmovq %rbx, 56(%rsi)

#判断是否可以count+1
judge0:
	andq %r8, %r8
	jle judge1
	iaddq $1, %rax
judge1:
	andq %r9, %r9
	jle judge2
	iaddq $1, %rax
judge2:
	andq %r10, %r10
	jle judge3
	iaddq $1, %rax
judge3:
	andq %r11, %r11
	jle judge4
	iaddq $1, %rax
judge4:
	andq %r12, %r12
	jle judge5
	iaddq $1, %rax
judge5:
	andq %r13, %r13
	jle judge6
	iaddq $1, %rax
judge6:
	andq %r14, %r14
	jle judge7
	iaddq $1, %rax
judge7:
	andq %rbx, %rbx
	jle Loop
	iaddq $1, %rax

Loop:
	iaddq $64,%rdi
	iaddq $64,%rsi
	iaddq $-8,%rdx
	jge Loop8x8

Test:
	iaddq $5,%rdx
	jl LeftChild
	je Remain3

RightChild:
	iaddq $-2,%rdx
	jg RightChild2
	jl Remain4
	je Remain5

LeftChild:
	iaddq $2,%rdx
	je Remain1
	jl Done
	iaddq $-1,%rdx
	jmp Remain2

RightChild2:
	iaddq $-1,%rdx
	je Remain6

Remain7:
	mrmovq 48(%rdi), %r8
    	rmmovq %r8,48(%rsi)
    	andq %r8,%r8

Remain6:
	mrmovq 40(%rdi), %r8
	jle Extra6
	iaddq $1, %rax
Extra6:
	rmmovq %r8, 40(%rsi)
	andq %r8, %r8

Remain5:
	mrmovq 32(%rdi), %r8
	jle Extra5
	iaddq $1, %rax
Extra5:
	rmmovq %r8, 32(%rsi)
	andq %r8, %r8

Remain4:
	mrmovq 24(%rdi), %r8
	jle Extra4
	iaddq $1, %rax
Extra4:
	rmmovq %r8, 24(%rsi)
	andq %r8, %r8

Remain3:
	mrmovq 16(%rdi), %r8
	jle Extra3
	iaddq $1, %rax
Extra3:
	rmmovq %r8, 16(%rsi)
	andq %r8, %r8

Remain2:
	mrmovq 8(%rdi), %r8
	jle Extra2
	iaddq $1, %rax
Extra2:
	rmmovq %r8, 8(%rsi)
	andq %r8, %r8

Remain1:
	mrmovq (%rdi), %r8
	jle Extra1
	iaddq $1, %rax
Extra1:
	rmmovq %r8, (%rsi)
	andq %r8, %r8
	jle Done
	iaddq $1, %rax

##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
